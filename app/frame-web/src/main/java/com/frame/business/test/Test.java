package com.frame.business.test;

import java.io.File;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;

public class Test {

	static class Stu{
		 
		private String name;
		private String age;
		public String getName() {
			return name;
		}
		public void setName(String name) {
			this.name = name;
		}
		public String getAge() {
			return age;
		}
		public void setAge(String age) {
			this.age = age;
		}
		
	}
	/*public static void main(String[] args) {
		Stu s = new Stu();
		s.setAge("11");
		s.setName("22");
		Stu s1 = new Stu();
		BeanUtils.copyProperties(s, s1);
		System.out.println(s1.getAge());
		System.out.println(s1.getName());
	}*/
	public static void main(String[] args) {
	 String  str = "08410101,08410493,08410005,08410020,08410033,08410041,08410051,08410063,08410069,08410078,08410081,08410086,08410090,08410093,08410110,08410120,08410121,08410127,08410146,08410162,08410164,08410166,08410185,08410186,08410196,08410204,08410212,08410215,08410223,08410229,08410230,08410232,08410235,08410264,08410265,08410270,08410273,08410279,08410293,08410299,08410305,08410311,08410316,08410319,08410337,08410341,08410349,08410352,08410354,08410381,08410384,08410385,08410388,08410391,08410394,08410395,08410399,08410404,08410405,08410408,08410410,08410421,08410423,08410424,08410428,08410429,08410433,08410439,08410443,08410444,08410449,08410454,08410458,08410464,08410465,08410502,08410504,08410514,08410517,08410518,08410527,08410531,08410533,08410538,08410539,08410543,08410550,08410554,08410555,08410556,08410557,08410559,08410560,08410562,08410564,08410566,08410567,08410568,08410570,08410572,08410573,08410575,08410576,08410579,08410583,08410584,08410587,08410589,08410600,08410601,08410602,08410610,08410613,08410615,08410618,08410625,08410632,08410636,08410637,08410640,08410641,08410644,08410646,08410649,08410650,08410652,08419006,08419009,08419012,08419039,08419045,08419065,08419066,08419080,08419084,08419089,08419094,08419096,08419099,08419106,08419112,08419119,08419123,08419131,08419136,08419138,08419141,08419142,08419144,08419146,08410009,08410094,08410115,08410118,08410218,08410236,08410023,08410032,08410043,08410053,08410061,08410070,08410076,08410084,08410089,08410119,08410124,08410128,08410173,08410179,08410189,08410210,08410240,08410242,08410255,08410258,08410267,08410285,08410288,08410314,08410356,08410360,08410416,08410007,08410057,08410067,08410135,08410144,08410158,08410202,08410226,08410239,08410322,08410370,08410495,08410496,08410016,08410052,08410062,08410072,08410082,08410108,08410123,08410134,08410140,08410153,08410154,08410200,08410208,08410296,08410378,08410407,08410426,08410430,08410469,08410470,08410471,08410475,08410476,08410477,08410478,08410484,08410487,08410488,08410490,08419014,08419019,08419020,08419021,08410012";

	String[] arr = str.split(",");
		DirectoryStream<Path> directoryStream;

		File in = new File("C:\\Users\\user\\Desktop\\zp"); // 资源文件夹
		File out = new File("C:\\Users\\user\\Desktop\\zp1"); // 目标文件夹

		try {
			directoryStream = Files.newDirectoryStream(in.toPath()); //returning a DirectoryStream to iterate over* all entries in the directory.

			directoryStream.forEach(path -> {
					try {
						for(String number:arr){
							Files.copy(path, out.toPath().resolve(number+".jpg"), StandardCopyOption.REPLACE_EXISTING); // 重命名为.txt 并且复制到out文件夹

						}

					} catch (Exception e) { // 因为在lambda表达式内，所以要包裹try catch
						e.printStackTrace();
					}

			});
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
